// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/v1nidev/auge-service/ent/emergencycontact"
	"github.com/v1nidev/auge-service/ent/member"
	"github.com/v1nidev/auge-service/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	emergencycontactFields := schema.EmergencyContact{}.Fields()
	_ = emergencycontactFields
	// emergencycontactDescPhoneNumber is the schema descriptor for phone_number field.
	emergencycontactDescPhoneNumber := emergencycontactFields[0].Descriptor()
	// emergencycontact.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	emergencycontact.PhoneNumberValidator = emergencycontactDescPhoneNumber.Validators[0].(func(string) error)
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescEmail is the schema descriptor for email field.
	memberDescEmail := memberFields[2].Descriptor()
	// member.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	member.EmailValidator = func() func(string) error {
		validators := memberDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
}
