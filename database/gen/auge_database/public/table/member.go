//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Member = newMemberTable()

type memberTable struct {
	postgres.Table

	//Columns
	ID                 postgres.ColumnString
	Name               postgres.ColumnString
	Sex                postgres.ColumnString
	Email              postgres.ColumnString
	IDMembershipStatus postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MemberTable struct {
	memberTable

	EXCLUDED memberTable
}

// AS creates new MemberTable with assigned alias
func (a *MemberTable) AS(alias string) *MemberTable {
	aliasTable := newMemberTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newMemberTable() *MemberTable {
	return &MemberTable{
		memberTable: newMemberTableImpl("public", "member"),
		EXCLUDED:    newMemberTableImpl("", "excluded"),
	}
}

func newMemberTableImpl(schemaName, tableName string) memberTable {
	var (
		IDColumn                 = postgres.StringColumn("id")
		NameColumn               = postgres.StringColumn("name")
		SexColumn                = postgres.StringColumn("sex")
		EmailColumn              = postgres.StringColumn("email")
		IDMembershipStatusColumn = postgres.IntegerColumn("id_membership_status")
		allColumns               = postgres.ColumnList{IDColumn, NameColumn, SexColumn, EmailColumn, IDMembershipStatusColumn}
		mutableColumns           = postgres.ColumnList{NameColumn, SexColumn, EmailColumn, IDMembershipStatusColumn}
	)

	return memberTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:                 IDColumn,
		Name:               NameColumn,
		Sex:                SexColumn,
		Email:              EmailColumn,
		IDMembershipStatus: IDMembershipStatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
