//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Package = newPackageTable()

type packageTable struct {
	postgres.Table

	//Columns
	Price            postgres.ColumnFloat
	ValidityInMonths postgres.ColumnInteger
	IDPackageType    postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PackageTable struct {
	packageTable

	EXCLUDED packageTable
}

// AS creates new PackageTable with assigned alias
func (a *PackageTable) AS(alias string) *PackageTable {
	aliasTable := newPackageTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPackageTable() *PackageTable {
	return &PackageTable{
		packageTable: newPackageTableImpl("public", "package"),
		EXCLUDED:     newPackageTableImpl("", "excluded"),
	}
}

func newPackageTableImpl(schemaName, tableName string) packageTable {
	var (
		PriceColumn            = postgres.FloatColumn("price")
		ValidityInMonthsColumn = postgres.IntegerColumn("validity_in_months")
		IDPackageTypeColumn    = postgres.IntegerColumn("id_package_type")
		allColumns             = postgres.ColumnList{PriceColumn, ValidityInMonthsColumn, IDPackageTypeColumn}
		mutableColumns         = postgres.ColumnList{PriceColumn}
	)

	return packageTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Price:            PriceColumn,
		ValidityInMonths: ValidityInMonthsColumn,
		IDPackageType:    IDPackageTypeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
