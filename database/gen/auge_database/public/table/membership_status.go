//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var MembershipStatus = newMembershipStatusTable()

type membershipStatusTable struct {
	postgres.Table

	//Columns
	ID          postgres.ColumnInteger
	Description postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MembershipStatusTable struct {
	membershipStatusTable

	EXCLUDED membershipStatusTable
}

// AS creates new MembershipStatusTable with assigned alias
func (a *MembershipStatusTable) AS(alias string) *MembershipStatusTable {
	aliasTable := newMembershipStatusTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newMembershipStatusTable() *MembershipStatusTable {
	return &MembershipStatusTable{
		membershipStatusTable: newMembershipStatusTableImpl("public", "membership_status"),
		EXCLUDED:              newMembershipStatusTableImpl("", "excluded"),
	}
}

func newMembershipStatusTableImpl(schemaName, tableName string) membershipStatusTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		DescriptionColumn = postgres.StringColumn("description")
		allColumns        = postgres.ColumnList{IDColumn, DescriptionColumn}
		mutableColumns    = postgres.ColumnList{DescriptionColumn}
	)

	return membershipStatusTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:          IDColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
