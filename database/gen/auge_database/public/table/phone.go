//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Phone = newPhoneTable()

type phoneTable struct {
	postgres.Table

	//Columns
	IDPerson postgres.ColumnString
	Number   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PhoneTable struct {
	phoneTable

	EXCLUDED phoneTable
}

// AS creates new PhoneTable with assigned alias
func (a *PhoneTable) AS(alias string) *PhoneTable {
	aliasTable := newPhoneTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPhoneTable() *PhoneTable {
	return &PhoneTable{
		phoneTable: newPhoneTableImpl("public", "phone"),
		EXCLUDED:   newPhoneTableImpl("", "excluded"),
	}
}

func newPhoneTableImpl(schemaName, tableName string) phoneTable {
	var (
		IDPersonColumn = postgres.StringColumn("id_person")
		NumberColumn   = postgres.StringColumn("number")
		allColumns     = postgres.ColumnList{IDPersonColumn, NumberColumn}
		mutableColumns = postgres.ColumnList{}
	)

	return phoneTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		IDPerson: IDPersonColumn,
		Number:   NumberColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
