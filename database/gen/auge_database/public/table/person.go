//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Person = newPersonTable()

type personTable struct {
	postgres.Table

	//Columns
	ID   postgres.ColumnString
	Name postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PersonTable struct {
	personTable

	EXCLUDED personTable
}

// AS creates new PersonTable with assigned alias
func (a *PersonTable) AS(alias string) *PersonTable {
	aliasTable := newPersonTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPersonTable() *PersonTable {
	return &PersonTable{
		personTable: newPersonTableImpl("public", "person"),
		EXCLUDED:    newPersonTableImpl("", "excluded"),
	}
}

func newPersonTableImpl(schemaName, tableName string) personTable {
	var (
		IDColumn       = postgres.StringColumn("id")
		NameColumn     = postgres.StringColumn("name")
		allColumns     = postgres.ColumnList{IDColumn, NameColumn}
		mutableColumns = postgres.ColumnList{NameColumn}
	)

	return personTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:   IDColumn,
		Name: NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
