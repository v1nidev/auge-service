//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var MemberSignsPackage = newMemberSignsPackageTable()

type memberSignsPackageTable struct {
	postgres.Table

	//Columns
	IDMember         postgres.ColumnString
	IDPackageType    postgres.ColumnInteger
	ValidityInMonths postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MemberSignsPackageTable struct {
	memberSignsPackageTable

	EXCLUDED memberSignsPackageTable
}

// AS creates new MemberSignsPackageTable with assigned alias
func (a *MemberSignsPackageTable) AS(alias string) *MemberSignsPackageTable {
	aliasTable := newMemberSignsPackageTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newMemberSignsPackageTable() *MemberSignsPackageTable {
	return &MemberSignsPackageTable{
		memberSignsPackageTable: newMemberSignsPackageTableImpl("public", "member_signs_package"),
		EXCLUDED:                newMemberSignsPackageTableImpl("", "excluded"),
	}
}

func newMemberSignsPackageTableImpl(schemaName, tableName string) memberSignsPackageTable {
	var (
		IDMemberColumn         = postgres.StringColumn("id_member")
		IDPackageTypeColumn    = postgres.IntegerColumn("id_package_type")
		ValidityInMonthsColumn = postgres.IntegerColumn("validity_in_months")
		allColumns             = postgres.ColumnList{IDMemberColumn, IDPackageTypeColumn, ValidityInMonthsColumn}
		mutableColumns         = postgres.ColumnList{}
	)

	return memberSignsPackageTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		IDMember:         IDMemberColumn,
		IDPackageType:    IDPackageTypeColumn,
		ValidityInMonths: ValidityInMonthsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
